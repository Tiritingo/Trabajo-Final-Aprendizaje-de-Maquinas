# -*- coding: utf-8 -*-
"""streamlitDespliegueTrabajoFinal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DgzsFwziy0ceIt5JWwgL9uGfMf0apyaW
"""

import streamlit as st
import pandas as pd
import joblib

# ==============================
# 1. Configuraci√≥n de la App
# ==============================
st.set_page_config(page_title="TRABAJO FINAL APRENDIZAJE DE M√ÅQUINAS", layout="wide")
st.title("üìä Predicci√≥n de Naturaleza de la Violencia")
st.write("Sube un archivo Excel con los datos de despliegue.")

# ==============================
# 2. Cargar Modelo (solo Decision Tree)
# ==============================
modelo_file = "DecisionTreeClassifier_pipeline.pkl"

try:
    modelo = joblib.load(modelo_file)
    st.success("‚úÖ Modelo Decision Tree cargado correctamente.")
except Exception as e:
    st.error(f"No se pudo cargar el modelo Decision Tree: {e}")
    st.stop()

# ==============================
# 3. Subir archivo Excel
# ==============================
uploaded_file = st.file_uploader("üìÇ Sube el archivo Excel con el DataFrame de despliegue", type=["xlsx"])

if uploaded_file is not None:
    df = pd.read_excel(uploaded_file)
    st.write("### Vista previa de los datos:")
    st.dataframe(df.head())

    # ==============================
    # 4. Predicciones con Decision Tree
    # ==============================
    try:
        y_pred = modelo.predict(df)
        resultados = pd.DataFrame({"Predicci√≥n_DecisionTree": y_pred})
        
        # Mostrar resultados
        st.write("### üìä Resultados de predicci√≥n (Decision Tree)")
        st.dataframe(resultados)

        # Opci√≥n para descargar la tabla
        st.download_button(
            label="‚¨áÔ∏è Descargar resultados",
            data=resultados.to_csv(index=False).encode('utf-8'),
            file_name="predicciones_decisiontree.csv",
            mime="text/csv"
        )
    except Exception as e:
        st.error(f"Error al predecir con el modelo Decision Tree: {e}")
